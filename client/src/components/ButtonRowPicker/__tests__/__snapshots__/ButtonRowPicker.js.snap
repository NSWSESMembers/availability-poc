// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`calls onConfirm 1`] = `
<View>
  <View
    style={Object {}}
  >
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onDismiss={[Function]}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0.7)",
              "flex": 1,
              "justifyContent": "center",
              "padding": "5%",
            },
            Object {},
          ]
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(255,255,255,0.8)",
                "borderRadius": 5,
                "flexShrink": 1,
                "marginBottom": 8,
                "padding": 8,
              },
              Object {},
            ]
          }
        >
          <RCTScrollView
            keyboardShouldPersistTaps="always"
          >
            <View>
              <View
                style={
                  Object {
                    "paddingHorizontal": 10,
                  }
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "borderBottomColor": "#ccc",
                          "borderBottomWidth": 1,
                          "padding": 8,
                        },
                        Object {},
                        false,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "rgba(0,118,255,0.9)",
                            "fontSize": 16,
                            "textAlign": "center",
                          },
                          Object {},
                        ]
                      }
                    >
                      Available
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "borderBottomColor": "#ccc",
                          "borderBottomWidth": 1,
                          "padding": 8,
                        },
                        Object {},
                        false,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "rgba(0,118,255,0.9)",
                            "fontSize": 16,
                            "textAlign": "center",
                          },
                          Object {},
                        ]
                      }
                    >
                      Unavailable
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "borderBottomColor": "#ccc",
                          "borderBottomWidth": 1,
                          "padding": 8,
                        },
                        Object {},
                        Object {
                          "borderBottomWidth": 0,
                        },
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "rgba(0,118,255,0.9)",
                            "fontSize": 16,
                            "textAlign": "center",
                          },
                          Object {},
                        ]
                      }
                    >
                      Unavailable - unless urgent
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              Object {},
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(255,255,255,0.8)",
                    "borderRadius": 5,
                    "padding": 8,
                  },
                  Object {},
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#333",
                      "fontSize": 16,
                      "textAlign": "center",
                    },
                    Object {},
                  ]
                }
              >
                cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        pointerEvents="none"
      >
        <View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingBottom": 5,
                "paddingTop": 5,
              }
            }
          >
            <View>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 11,
                    "fontWeight": "900",
                    "paddingTop": 5,
                  }
                }
              >
                TITLE
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "paddingBottom": 5,
                  }
                }
              >
                For this time period I am 'selected'
              </Text>
            </View>
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#EEE",
                    "fontSize": 40,
                  },
                  undefined,
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders correctly 1`] = `
<View>
  <View
    style={Object {}}
  >
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onDismiss={[Function]}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0.7)",
              "flex": 1,
              "justifyContent": "center",
              "padding": "5%",
            },
            Object {},
          ]
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(255,255,255,0.8)",
                "borderRadius": 5,
                "flexShrink": 1,
                "marginBottom": 8,
                "padding": 8,
              },
              Object {},
            ]
          }
        >
          <RCTScrollView
            keyboardShouldPersistTaps="always"
          >
            <View>
              <View
                style={
                  Object {
                    "paddingHorizontal": 10,
                  }
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "borderBottomColor": "#ccc",
                          "borderBottomWidth": 1,
                          "padding": 8,
                        },
                        Object {},
                        false,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "rgba(0,118,255,0.9)",
                            "fontSize": 16,
                            "textAlign": "center",
                          },
                          Object {},
                        ]
                      }
                    >
                      Available
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "borderBottomColor": "#ccc",
                          "borderBottomWidth": 1,
                          "padding": 8,
                        },
                        Object {},
                        false,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "rgba(0,118,255,0.9)",
                            "fontSize": 16,
                            "textAlign": "center",
                          },
                          Object {},
                        ]
                      }
                    >
                      Unavailable
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "borderBottomColor": "#ccc",
                          "borderBottomWidth": 1,
                          "padding": 8,
                        },
                        Object {},
                        Object {
                          "borderBottomWidth": 0,
                        },
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "rgba(0,118,255,0.9)",
                            "fontSize": 16,
                            "textAlign": "center",
                          },
                          Object {},
                        ]
                      }
                    >
                      Unavailable - unless urgent
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              Object {},
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(255,255,255,0.8)",
                    "borderRadius": 5,
                    "padding": 8,
                  },
                  Object {},
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#333",
                      "fontSize": 16,
                      "textAlign": "center",
                    },
                    Object {},
                  ]
                }
              >
                cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        pointerEvents="none"
      >
        <View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingBottom": 5,
                "paddingTop": 5,
              }
            }
          >
            <View>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 11,
                    "fontWeight": "900",
                    "paddingTop": 5,
                  }
                }
              >
                TITLE
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "paddingBottom": 5,
                  }
                }
              >
                For this time period I am 'selected'
              </Text>
            </View>
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#EEE",
                    "fontSize": 40,
                  },
                  undefined,
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
