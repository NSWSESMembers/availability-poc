// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#1e3c78",
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#FFF",
            "fontSize": 90,
          },
          undefined,
          Object {
            "fontFamily": "FontAwesome",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      ï‚¡
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#FFF",
          "fontSize": 45,
        }
      }
    >
      Callout
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#FFF",
          "fontSize": 15,
        }
      }
    >
      Version 
      version
       Revision 
      codePushHash
    </Text>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "height": 75,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0.5,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#ffffff",
              "paddingLeft": 20,
              "paddingRight": 20,
              "width": "100%",
            },
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#f48603",
              "opacity": 1,
              "padding": 10,
              "width": "100%",
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 20,
                  "textAlign": "center",
                },
              ]
            }
          >
            Sign In
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0.5,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#ffffff",
              "paddingLeft": 20,
              "paddingRight": 20,
              "width": "100%",
            },
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#1c87c9",
              "opacity": 1,
              "padding": 10,
              "width": "100%",
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 20,
                  "textAlign": "center",
                },
              ]
            }
          >
            Register
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
