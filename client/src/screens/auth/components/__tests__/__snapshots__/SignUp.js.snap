// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#EEE",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "flex-start",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "paddingLeft": 20,
          "paddingRight": 20,
          "width": "100%",
        },
        Object {
          "paddingTop": 20,
        },
        Object {
          "backgroundColor": "transparent",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "#cbcbcb",
          "marginBottom": 25,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          autoCorrect={false}
          onChangeText={[Function]}
          placeholder="Username"
          placeholderTextColor="#C2C2C2"
          returnKeyType="next"
          style={
            Object {
              "alignItems": "center",
              "color": "#1e3c78",
              "flex": 1,
              "flexDirection": "row",
              "fontSize": 20,
              "fontWeight": "700",
              "height": 50,
              "justifyContent": "center",
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          value=""
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "#cbcbcb",
          "marginBottom": 25,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          placeholder="Password"
          placeholderTextColor="#C2C2C2"
          secureTextEntry={true}
          style={
            Object {
              "alignItems": "center",
              "color": "#1e3c78",
              "flex": 1,
              "flexDirection": "row",
              "fontSize": 20,
              "fontWeight": "700",
              "height": 50,
              "justifyContent": "center",
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          value=""
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "#cbcbcb",
          "marginBottom": 25,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          autoCorrect={false}
          keyboardType="email-address"
          onChangeText={[Function]}
          placeholder="Email"
          placeholderTextColor="#C2C2C2"
          returnKeyType="next"
          style={
            Object {
              "alignItems": "center",
              "color": "#1e3c78",
              "flex": 1,
              "flexDirection": "row",
              "fontSize": 20,
              "fontWeight": "700",
              "height": 50,
              "justifyContent": "center",
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          value=""
        />
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#f48603",
          "opacity": 1,
          "padding": 10,
          "width": "100%",
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#ffffff",
              "fontSize": 20,
              "textAlign": "center",
            },
          ]
        }
      >
        Register
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders correctly 2`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#EEE",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "flex-start",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "paddingLeft": 20,
          "paddingRight": 20,
          "width": "100%",
        },
        Object {
          "paddingTop": 20,
        },
        Object {
          "backgroundColor": "transparent",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "#cbcbcb",
          "marginBottom": 25,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          autoCorrect={false}
          onChangeText={[Function]}
          placeholder="Username"
          placeholderTextColor="#C2C2C2"
          returnKeyType="next"
          style={
            Object {
              "alignItems": "center",
              "color": "#1e3c78",
              "flex": 1,
              "flexDirection": "row",
              "fontSize": 20,
              "fontWeight": "700",
              "height": 50,
              "justifyContent": "center",
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          value=""
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "#cbcbcb",
          "marginBottom": 25,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          placeholder="Password"
          placeholderTextColor="#C2C2C2"
          secureTextEntry={true}
          style={
            Object {
              "alignItems": "center",
              "color": "#1e3c78",
              "flex": 1,
              "flexDirection": "row",
              "fontSize": 20,
              "fontWeight": "700",
              "height": 50,
              "justifyContent": "center",
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          value=""
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "#cbcbcb",
          "marginBottom": 25,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          autoCorrect={false}
          keyboardType="email-address"
          onChangeText={[Function]}
          placeholder="Email"
          placeholderTextColor="#C2C2C2"
          returnKeyType="next"
          style={
            Object {
              "alignItems": "center",
              "color": "#1e3c78",
              "flex": 1,
              "flexDirection": "row",
              "fontSize": 20,
              "fontWeight": "700",
              "height": 50,
              "justifyContent": "center",
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          value=""
        />
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#f48603",
          "opacity": 1,
          "padding": 10,
          "width": "100%",
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#ffffff",
              "fontSize": 20,
              "textAlign": "center",
            },
          ]
        }
      >
        Register
      </Text>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#EEE",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "justifyContent": "center",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="large"
      />
    </View>
  </View>
</View>
`;
